1.对于javafx的ComboBox，要想获得它的选定的那一个，可以先获得它的索引：
  combobox.getSelectionModel().getSelectedIndex();
  或者通过(Type)month.getSelectionModel().getSelectedItem()来获得选项
  
  
2.V[H]Box.setMargin(node:Node, value:Insets):void
	可以用来设置面板中的节点的外边距，即这个节点与其他节点的距离
	
3.设置TextField中文本的字体颜色：
	.text-input {
	    -fx-text-fill: -fx-text-inner-color;
	    -fx-highlight-fill: derive(-fx-control-inner-background,-20%);
	    -fx-highlight-text-fill: -fx-text-inner-color;
	    -fx-prompt-text-fill: derive(-fx-control-inner-background,-30%);
	    -fx-background-color: linear-gradient(to bottom, derive(-fx-text-box-border, -10%), -fx-text-box-border),
	        linear-gradient(from 0px 0px to 0px 5px, derive(-fx-control-inner-background, -9%), -fx-control-inner-background);
	    -fx-background-insets: 0, 1;
	    -fx-background-radius: 3, 2;
	    -fx-cursor: text;
	    -fx-padding: 0.333333em 0.583em 0.333333em 0.583em; /* 4 7 4 7 */
	    -fx-font-size: 16px;
	}
	.text-input:focused {
	    -fx-highlight-fill: -fx-accent;
	    -fx-highlight-text-fill: white;
	    -fx-background-color: 
	    -fx-focus-color,
	    -fx-control-inner-background,
	    -fx-faint-focus-color,
	        linear-gradient(from 0px 0px to 0px 5px, derive(-fx-control-inner-background, -9%), -fx-control-inner-background);
	    -fx-background-insets: -0.2, 1, -1.4, 3;
	    -fx-background-radius: 3, 2, 4, 0;
	    -fx-prompt-text-fill: transparent;
	}
	
	
4. 关于javafx的菜单：
	菜单和菜单项可以与选择选项快捷键组合，称为键盘快捷键。
	必须创建一个菜单栏javafx.scene.control.MenuBar对象来保存javafx.scene.control.Menu对象。
	菜单对象可以包含Menu和javafx.scene.control.MenuItem对象。
	菜单可以包含其他菜单作为子菜单。
	MenuItems是Menu对象内的子选项。
	Menu类是MenuItem的子类，它有一个getItems().add()方法，它能够添加诸如其他Menu和MenuItem实例的子元素。
	
5. setViewOrder 可以解决控件遮挡问题，order小的优先级更高

6. javafx中，假设已经有对象A，对象B用A来设置自己的某个属性，若另一对象C也使用A来设置自己的属性，则B用A来设置的属性可能会失效
	例如：
		A:ImageView
		B:Button
		C:Button
		B.setGraphics(A);
		C.setGraphics(A);
		此时A按钮的图片背景会失效
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	